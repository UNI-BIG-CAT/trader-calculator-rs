import { Button, VerticalBox, HorizontalBox, ListView } from "std-widgets.slint";

// 股票数据结构
export struct StockItem {
    stock_id: int,
    stock_name: string,
    stock_type: int,
    commission_fee_rate: float,
    created_at: string,
}

// 股票列表项组件
component StockListItem inherits Rectangle {
    in property <StockItem> stock_data;
    callback view_stock(int);
    callback delete_stock(int);
    height: 60px;
    background: white;
    border-width: 1px;
    border-color: #e0e0e0;
    HorizontalBox {
        padding: 10px;
        spacing: 10px;
        
        // 股票信息区域
        VerticalBox {
            alignment: start;
            Text {
                text: stock_data.stock_name;
                font-size: 16px;
                font-weight: 600;
                color: #333;
            }

            HorizontalBox {
                spacing: 20px;
                Text {
                    text: "类型: " + (stock_data.stock_type == 1 ? "沪市" : stock_data.stock_type == 2 ? "深市" : stock_data.stock_type == 3 ? "创业板" : "科创板");
                    font-size: 12px;
                    color: #666;
                }

                Text {
                    text: "费率: " + (stock_data.commission_fee_rate * 10000) + "‱";
                    font-size: 12px;
                    color: #666;
                }
            }
        }
        
        // 按钮区域
        HorizontalBox {
            spacing: 10px;
            alignment: end;
            
            // 查看按钮
            Rectangle {
                width: 50px;
                height: 30px;
                background: #007acc;
                border-radius: 4px;
                Text {
                    text: "查看";
                    color: white;
                    font-size: 12px;
                    vertical-alignment: center;
                    horizontal-alignment: center;
                }

                TouchArea {
                    clicked => {
                        root.view_stock(stock_data.stock_id);
                    }
                }
            }
            
            // 删除按钮
            Rectangle {
                width: 50px;
                height: 30px;
                background: #dc3545;
                border-radius: 4px;
                Text {
                    text: "删除";
                    color: white;
                    font-size: 12px;
                    vertical-alignment: center;
                    horizontal-alignment: center;
                }

                TouchArea {
                    clicked => {
                        root.delete_stock(stock_data.stock_id);
                    }
                }
            }
        }
    }
}

component Header {
    height: 50px;
    callback create_stock();
    Rectangle {
        background: white;
    }

    HorizontalBox {
        padding: 10px;
        Rectangle {
            // 左侧占位
        }

        Text {
            text: "交易计算器";
            color: #FE9900;
            font-size: 18px;
            horizontal-alignment: center;
        }

        Rectangle {
            // 右侧占位，推动按钮到最右边
        }

        Rectangle {
            width: 60px;
            height: 30px;
            background: #FE9900;
            border-radius: 4px;
            Text {
                text: "建仓";
                color: white;
                vertical-alignment: center;
                horizontal-alignment: center;
            }

            TouchArea {
                clicked => {
                    root.create_stock();
                }
            }
        }
    }
}

export component MainWindow inherits Window {
    title: "交易计算器";
    width: 600px;
    height: 500px;
    background: #f5f5f5;
    
    // 股票列表数据
    in property <[StockItem]> stock_list: [];
    
    // 回调函数
    callback view_stock_details(int);
    callback delete_stock_item(int);
    callback create_new_stock();
    callback refresh_stock_list();

    VerticalBox {
        Header {
            create_stock => {
                root.create_new_stock();
            }
        }

        Rectangle {
            // 主要内容区域
            background: white;
            padding: 10px;
            VerticalBox {
                spacing: 5px;
                
                // 列表标题
                HorizontalBox {
                    padding: 10px;
                    Text {
                        text: "股票列表 (" + stock_list.length + " 只)";
                        font-size: 14px;
                        font-weight: 600;
                        color: #333;
                    }

                    Rectangle {
                        // 占位符推动刷新按钮到右边
                    }
                    
                    // 刷新按钮
                    Rectangle {
                        width: 50px;
                        height: 25px;
                        background: #28a745;
                        border-radius: 4px;
                        Text {
                            text: "刷新";
                            color: white;
                            font-size: 11px;
                            vertical-alignment: center;
                            horizontal-alignment: center;
                        }

                        TouchArea {
                            clicked => {
                                root.refresh_stock_list();
                            }
                        }
                    }
                }
                
                // 股票列表
                if stock_list.length == 0: Rectangle {
                    height: 100px;
                    Text {
                        text: "暂无股票数据\n点击\"建仓\"按钮添加股票";
                        color: #999;
                        font-size: 14px;
                        horizontal-alignment: center;
                        vertical-alignment: center;
                    }
                }
                if stock_list.length > 0: ListView {
                    for stock_item[index] in stock_list: StockListItem {
                        stock_data: stock_item;
                        view_stock(stock_id) => {
                            root.view_stock_details(stock_id);
                        }
                        delete_stock(stock_id) => {
                            root.delete_stock_item(stock_id);
                        }
                    }
                }
            }
        }
    }
}
